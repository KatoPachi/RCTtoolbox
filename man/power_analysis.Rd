% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power_analysis.r
\name{power_analysis}
\alias{power_analysis}
\title{Power Analysis of Two Sided T-Test for RCT with Multiple Arms}
\usage{
power_analysis(
  mod,
  data,
  ctrl = NULL,
  d = NULL,
  alpha = NULL,
  power = NULL,
  std_dev = 0.5
)
}
\arguments{
\item{mod}{formula. Specify one-sided formula \code{~ d} where
\code{d} is treatments.
If missing, find formula from \code{options("RCTtool.treatment")}.}

\item{data}{data which you want to use.}

\item{ctrl}{character. Name of the control.
If NULL (default), (1) find out from \code{options("RCTtool.control")},
and then (2) the first level of the variable \code{d} is control.}

\item{d}{numeric. Effect size.}

\item{alpha}{numeric. Significant level.}

\item{power}{numeric. Power.}

\item{std_dev}{numeric.
The standard deviation used when calculating the unstandardized effect.
If \code{std_dev} is numeric, then specified value is used to calculate.
If \code{std_dev} is string, calculate standard deviation of specified variable
and use it to calculate the unstandardized effect.
Default is 0.5.}
}
\value{
tibble (and data.frame) with class "power.analysis"
}
\description{
This function performs a two-sided t-test power analysis
given the sample sizes of the treatment and control groups.
Calculate the value that is NULL among the effect size, significance level,
and power.
For the effect size, the non-standardized effect
(absolute value of the difference between the average outcomes)
is also calculated.
If the outcome variable is specified in the \code{mod} argument,
the square root of the mean of the outcome variances of the two group
is the standard deviation.
If no outcome variable is specified,
the standard deviation specified by the std_dev argument is used.
}
\examples{
# DGP
set.seed(120511)
n <- 1000
x1 <- rnorm(n); x2 <- rnorm(n)
d <- sample(c("A", "B", "C"), size = n, replace = TRUE)

ya <- 0.2 + 0.5 * x1 + 0.01 * x2
yb <- 1.2 + 0.3 * x2
yc <- -1 - 0.2 * x1 + 0.5 * x2
y <- ifelse(d == "A", ya, ifelse(d == "B", yb, yc))
dt <- data.frame(y, d, x1, x2)

# power analysis with variance assumption
power_analysis(~d, dt, alpha = 0.05, power = 0.8, std_dev = 0.2)

# power analysis with known variance
power_analysis(~d, dt, ctrl = "A", alpha = 0.05, power = 0.8, std_dev = "y")

# If you pre-register models through options(),
# balance test function is simply implemented.
setRCTtool(RCTtool.treatment = ~ d, RCTtool.control = "B")
power_analysis(data = dt, alpha = 0.05, power = 0.8, std_dev = 0.2)
clearRCTtool()


}
